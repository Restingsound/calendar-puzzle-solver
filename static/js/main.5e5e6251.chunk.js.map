{"version":3,"sources":["solver.ts","App.tsx","reportWebVitals.js","index.js"],"names":["puzzle","ROWS","length","COLS","items","rotate","item","n","m","ret","i","push","j","map","v","join","flip","itemMasks","uniqBy","x","firstXCols","masks","mask","indexOf","solve","board","solution","count","canPlace","index","shape","shapeRotation","row","Math","floor","col","firstXCol","r","c","place","remove","findSolutions","console","log","s","Calendar","monthNames","dayNames","this","props","month","day","dayName","onChange","className","range","onClick","d","dn","React","PureComponent","SolutionView","colors","forEach","flatten","style","backgroundColor","App","split","state","Date","getMonth","getDate","getDay","solutions","handleChange","setState","href","marginLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e5e6251.chunk.js","sourcesContent":["import { uniqBy } from \"lodash\";\n\n// 8 x 7\nexport const puzzle = [\n  \"......x\",\n  \"......x\",\n  \".......\",\n  \".......\",\n  \".......\",\n  \".......\",\n  \".......\",\n  \"xxxx...\",\n];\nexport const ROWS = puzzle.length;\nexport const COLS = puzzle[0].length;\n\n// 10\nconst items = [\n  [\"x...\", \"xxxx\"],\n  [\"x..\", \"xxx\", \"..x\"],\n  [\"..xx\", \"xxx.\"],\n  [\"xxxx\"],\n  [\".xx\", \"xxx\"],\n  [\"xxx\", \"x.x\"],\n  [\"x..\", \"xxx\"],\n  [\"x..\", \"x..\", \"xxx\"],\n  [\"x..\", \"xxx\", \"x..\"],\n  [\"xx.\", \".xx\"],\n];\n\nconst rotate = (item: string[]) => {\n  const n = item.length;\n  const m = item[0].length;\n  const ret: any[] = [];\n  for (let i = 0; i < m; ++i) {\n    ret.push([]);\n    for (let j = 0; j < n; ++j) {\n      ret[i].push(item[j][m - i - 1]);\n    }\n  }\n  return ret.map((v) => v.join(\"\"));\n};\n\nconst flip = (item: string[]) => {\n  const n = item.length;\n  const m = item[0].length;\n  const ret: any[] = [];\n  for (let i = 0; i < m; ++i) {\n    ret.push([]);\n    for (let j = 0; j < n; ++j) {\n      ret[i].push(item[j][i]);\n    }\n  }\n  return ret.map((v) => v.join(\"\"));\n};\n\n// 10 * ? * ['???','???']\nexport const itemMasks = items.map((item) => {\n  const ret = [item];\n  // rotate\n  for (let i = 1; i < 4; ++i) {\n    ret.push(rotate(ret[i - 1]));\n  }\n  for (let i = 4; i < 8; ++i) {\n    ret.push(flip(ret[i - 4]));\n  }\n  return uniqBy(ret, (x) => x.join(\"\\n\"));\n});\n// 10 * ?\nexport const firstXCols = itemMasks.map((masks) =>\n  masks.map((mask) => mask[0].indexOf(\"x\"))\n);\n\nexport function solve(board: string[][]) {\n  //console.log(\"board: \" + board);\n  const ret: { index: number; shapeRotation: number }[][] = [];\n  const solution: ({ index: number; shapeRotation: number } | null)[] =\n    items.map(() => null);\n  let count = 0;\n\n  const canPlace = (index: number, shape: number, shapeRotation: number) => {\n    const row = Math.floor(index / COLS);\n    const col = index % COLS;\n    const mask = itemMasks[shape][shapeRotation];\n    const n = mask.length;\n    const m = mask[0].length;\n    const firstXCol = firstXCols[shape][shapeRotation];\n    if (row + n > ROWS) {\n      return false;\n    }\n    if (col - firstXCol < 0 || col + m - firstXCol > COLS) {\n      return false;\n    }\n    for (let r = 0; r < n; ++r) {\n      for (let c = 0; c < m; ++c) {\n        if (mask[r][c] === \"x\" && board[row + r][col + c - firstXCol] === \"x\") {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  const place = (index: number, shape: number, shapeRotation: number) => {\n    const row = Math.floor(index / COLS);\n    const col = index % COLS;\n    const mask = itemMasks[shape][shapeRotation];\n    const n = mask.length;\n    const m = mask[0].length;\n    const firstXCol = firstXCols[shape][shapeRotation];\n    for (let r = 0; r < n; ++r) {\n      for (let c = 0; c < m; ++c) {\n        if (mask[r][c] === \"x\") {\n          board[row + r][col + c - firstXCol] = \"x\";\n        }\n      }\n    }\n  };\n\n  const remove = (index: number, shape: number, shapeRotation: number) => {\n    const row = Math.floor(index / COLS);\n    const col = index % COLS;\n    const mask = itemMasks[shape][shapeRotation];\n    const n = mask.length;\n    const m = mask[0].length;\n    const firstXCol = firstXCols[shape][shapeRotation];\n    for (let r = 0; r < n; ++r) {\n      for (let c = 0; c < m; ++c) {\n        if (mask[r][c] === \"x\") {\n          board[row + r][col + c - firstXCol] = \".\";\n        }\n      }\n    }\n  };\n\n  const findSolutions: any = (index: number) => {\n    count += 1;\n    if (ret.length > 10) {\n      return false;\n    }\n    const row = Math.floor(index / COLS);\n    const col = index % COLS;\n    if (row >= ROWS) {\n      console.log(\"solution \" + count + \" is \");\n      console.log(solution);\n      //why is this map different!? ********************************************\n      console.log(solution.map((s) => s));\n      ret.push(solution.map((s) => s!));\n      return true;\n    }\n    if (board[row][col] === \"x\") {\n      return findSolutions(index + 1);\n    }\n    for (let shape = 0; shape < items.length; ++shape) {\n      if (!solution[shape]) {\n        for (\n          let shapeRotation = 0;\n          shapeRotation < itemMasks[shape].length;\n          ++shapeRotation\n        ) {\n          if (canPlace(index, shape, shapeRotation)) {\n            place(index, shape, shapeRotation);\n            solution[shape] = { index, shapeRotation };\n            findSolutions(index + 1);\n            solution[shape] = null;\n            remove(index, shape, shapeRotation);\n          }\n        }\n      }\n    }\n    return false;\n  };\n\n  findSolutions(0);\n  console.log(`Searches: ${count}`);\n  return ret;\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { flatten, range } from \"lodash\";\nimport { COLS, firstXCols, itemMasks, puzzle, ROWS, solve } from \"./solver\";\n\nclass Calendar extends React.PureComponent<{\n  month: number;\n  day: number;\n  dayName: number;\n  onChange: (params: { month: number; day: number; dayName: number }) => any;\n}> {\n  monthNames = [\n    \"JAN\",\n    \"FEB\",\n    \"MAR\",\n    \"APR\",\n    \"MAY\",\n    \"JUN\",\n    \"JUL\",\n    \"AUG\",\n    \"SEP\",\n    \"OCT\",\n    \"NOV\",\n    \"DEC\",\n  ];\n\n  dayNames = [\"SUN\", \"MON\", \"TUES\", \"WED\", \"THUR\", \"FRI\", \"SAT\"];\n\n  render() {\n    const { month, day, dayName, onChange } = this.props;\n    return (\n      <div className=\"Calendar\">\n        {range(0, 6).map((m) => (\n          <div\n            className={`item month ${month === m ? \"selected\" : \"\"}`}\n            key={m}\n            onClick={() => onChange({ month: m, day, dayName })}\n          >\n            {this.monthNames[m]}\n          </div>\n        ))}\n        <div className=\"item empty\" />\n        {range(6, 12).map((m) => (\n          <div\n            className={`item month ${month === m ? \"selected\" : \"\"}`}\n            key={m}\n            onClick={() => onChange({ month: m, day, dayName })}\n          >\n            {this.monthNames[m]}\n          </div>\n        ))}\n        <div className=\"item empty\" />\n        {range(1, 32).map((d) => (\n          <div\n            className={`item ${day === d ? \"selected\" : \"\"}`}\n            key={d}\n            onClick={() => onChange({ month, day: d, dayName })}\n          >\n            {d}\n          </div>\n        ))}\n        {range(0, 4).map((dn) => (\n          <div\n            className={`item day ${dayName === dn ? \"selected\" : \"\"}`}\n            key={dn}\n            onClick={() => onChange({ month, day, dayName: dn })}\n          >\n            {this.dayNames[dn]}\n          </div>\n        ))}\n        <div className=\"item empty\" />\n        <div className=\"item empty\" />\n        <div className=\"item empty\" />\n        <div className=\"item empty\" />\n        {range(4, 7).map((dn) => (\n          <div\n            className={`item day ${dayName === dn ? \"selected\" : \"\"}`}\n            key={dn}\n            onClick={() => onChange({ month, day, dayName: dn })}\n          >\n            {this.dayNames[dn]}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nclass SolutionView extends React.PureComponent<{\n  solution: { index: number; shapeRotation: number }[];\n}> {\n  colors = [\n    \"#6B7280\",\n    \"#EF4444\",\n    \"#F59E0B\",\n    \"#10B981\",\n    \"#3bd7f6\",\n    \"#6366F1\",\n    \"#c85cf6\",\n    \"#EC4899\",\n    \"#ff266e\",\n    \"#964b2d\",\n  ];\n\n  render() {\n    const { solution } = this.props;\n    const board = range(ROWS).map(() => range(COLS).map(() => -1));\n\n    itemMasks.forEach((masks, shape) => {\n      const { index, shapeRotation } = solution[shape];\n      const row = Math.floor(index / COLS);\n      const col = index % COLS;\n      const mask = masks[shapeRotation];\n      const n = mask.length;\n      const m = mask[0].length;\n      const firstXCol = firstXCols[shape][shapeRotation];\n\n      for (let r = 0; r < n; ++r) {\n        for (let c = 0; c < m; ++c) {\n          if (mask[r][c] === \"x\") {\n            board[row + r][col + c - firstXCol] = shape;\n          }\n        }\n      }\n    });\n\n    return (\n      <div className=\"SolutionView\">\n        {flatten(\n          range(ROWS).map((row) =>\n            range(COLS).map((col) => (\n              <div\n                key={`${row}_${col}`}\n                className=\"item\"\n                style={\n                  board[row][col] >= 0\n                    ? { backgroundColor: this.colors[board[row][col]] }\n                    : { backgroundColor: \"transparent\" }\n                }\n              />\n            ))\n          )\n        )}\n      </div>\n    );\n  }\n}\n\nexport default class App extends React.PureComponent<{}> {\n  solve = (month: number, day: number, dayName: number) => {\n    const board = puzzle.map((row) => row.split(\"\"));\n    board[Math.floor(month / 6)][month % 6] = \"x\";\n    board[Math.floor((day - 1) / 7) + 2][(day - 1) % 7] = \"x\";\n    if (dayName < 4) {\n      board[6][3 + dayName] = \"x\";\n    }\n    board[7][dayName] = \"x\";\n    return solve(board);\n  };\n\n  state = {\n    month: new Date().getMonth(), // 0 - 11\n    day: new Date().getDate(), // 1 - 31\n    dayName: new Date().getDay(), // 0 - 6\n    solutions: this.solve(\n      new Date().getMonth(),\n      new Date().getDate(),\n      new Date().getDay()\n    ),\n    index: 0,\n  };\n\n  handleChange = ({\n    month,\n    day,\n    dayName,\n  }: {\n    month: number;\n    day: number;\n    dayName: number;\n  }) =>\n    this.setState({\n      month,\n      day,\n      dayName,\n      solutions: this.solve(month, day, dayName),\n      index: 0,\n    });\n\n  render() {\n    const { month, day, dayName, solutions, index } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Calendar Puzzle Solver with Day of Week</h1>\n        <div>\n          <a href=\"https://filmmings.com/products/daily-calendar-puzzle\">\n            Daily Calendar Puzzle with Day of Week\n          </a>\n          <a\n            href=\"https://github.com/Restingsound/calendar-puzzle-solver\"\n            style={{ marginLeft: 16 }}\n          >\n            Github - Restingsound\n          </a>\n        </div>\n        <div className=\"Container\">\n          <Calendar\n            month={month}\n            day={day}\n            dayName={dayName}\n            onChange={this.handleChange}\n          />\n          {solutions[index] && <SolutionView solution={solutions[index]} />}\n        </div>\n        {solutions.length > 0 ? (\n          <div className=\"Solutions\">\n            {solutions?.map((solution, i) => (\n              <div\n                className={`SolutionItem ${i === index ? \"selected\" : \"\"}`}\n                key={i}\n                onClick={() => this.setState({ index: i })}\n              >\n                {`Solution ${i}`}\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div>No Solution ？？</div>\n        )}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}