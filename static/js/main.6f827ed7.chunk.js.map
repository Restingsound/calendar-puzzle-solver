{"version":3,"sources":["solver.ts","App.tsx","reportWebVitals.js","index.js"],"names":["puzzle","ROWS","length","COLS","items","rotate","item","n","m","ret","i","push","j","map","v","join","flip","itemMasks","uniqBy","x","itemDirections","masks","originMaskString","mask","itemMaskString","indexOf","firstXCols","solve","board","solutionCount","solution","canPlace","index","shape","shapeRotation","row","Math","floor","col","firstXCol","r","c","place","remove","findSolutions","s","Calendar","monthNames","dayNames","className","src","alt","React","PureComponent","SolutionView","colors","this","props","direction","hwDiff","needDiff","style","top","left","width","height","transform","flatten","split","_1","bottom","right","borderTop","borderLeft","borderRight","borderBottom","borderStyle","borderColor","backgroundColor","App","month","day","dayName","state","Date","getMonth","getDate","getDay","solutions","handleChange","setState","solCountChange","longMonthNames","longDayNames","nth","d","href","marginLeft","onChange","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f827ed7.chunk.js","sourcesContent":["import { uniqBy } from \"lodash\";\r\n\r\n// 8 x 7\r\nexport const puzzle = [\r\n  \"......x\",\r\n  \"......x\",\r\n  \".......\",\r\n  \".......\",\r\n  \".......\",\r\n  \".......\",\r\n  \".......\",\r\n  \"xxxx...\",\r\n];\r\nexport const ROWS = puzzle.length;\r\nexport const COLS = puzzle[0].length;\r\n\r\n// 10 pieces\r\nexport const items = [\r\n  [\"x...\", \"xxxx\"],\r\n  [\"x..\", \"xxx\", \"..x\"],\r\n  [\"..xx\", \"xxx.\"],\r\n  [\"xxxx\"],\r\n  [\".xx\", \"xxx\"],\r\n  [\"xxx\", \"x.x\"],\r\n  [\"x..\", \"xxx\"],\r\n  [\"x..\", \"x..\", \"xxx\"],\r\n  [\"x..\", \"xxx\", \"x..\"],\r\n  [\"xx.\", \".xx\"],\r\n];\r\n\r\n// 10 alternate pieces\r\n// export const items = [\r\n//   [\"x...\", \"xxxx\"],\r\n//   [\"x..\", \"xxx\", \"..x\"],\r\n//   [\"...x\", \"..xx\", \"xxx.\"],\r\n//   [\"xxxx\"],\r\n//   [\".xx\", \"xxx\"],\r\n//   [\".x.\", \"xxx\"],\r\n//   [\"x..\", \"xxx\"],\r\n//   [\"x.x\", \"xxx\"],\r\n//   [\"x..\", \"xxx\", \"x..\"],\r\n//   [\"xx.\", \".xx\"],\r\n// ];\r\n\r\nconst rotate = (item: string[]) => {\r\n  const n = item.length;\r\n  const m = item[0].length;\r\n  const ret: any[] = [];\r\n  for (let i = 0; i < m; ++i) {\r\n    ret.push([]);\r\n    for (let j = 0; j < n; ++j) {\r\n      ret[i].push(item[j][m - i - 1]);\r\n    }\r\n  }\r\n  return ret.map((v) => v.join(\"\"));\r\n};\r\n\r\nconst flip = (item: string[]) => {\r\n  const n = item.length;\r\n  const m = item[0].length;\r\n  const ret: any[] = [];\r\n  for (let i = 0; i < m; ++i) {\r\n    ret.push([]);\r\n    for (let j = 0; j < n; ++j) {\r\n      ret[i].push(item[j][i]);\r\n    }\r\n  }\r\n  return ret.map((v) => v.join(\"\"));\r\n};\r\n\r\n// 10 * ? * ['???','???']\r\nexport const itemMasks = items.map((item) => {\r\n  const ret = [item];\r\n  // rotate\r\n  for (let i = 1; i < 4; ++i) {\r\n    ret.push(rotate(ret[i - 1]));\r\n  }\r\n  for (let i = 4; i < 8; ++i) {\r\n    ret.push(flip(ret[i - 4]));\r\n  }\r\n  return uniqBy(ret, (x) => x.join(\"\\n\"));\r\n});\r\n\r\n// 10 * ?\r\nexport const itemDirections = items.map((item, i) => {\r\n  const masks = [item];\r\n  // rotate\r\n  for (let i = 1; i < 4; ++i) {\r\n    masks.push(rotate(masks[i - 1]));\r\n  }\r\n  for (let i = 4; i < 8; ++i) {\r\n    masks.push(flip(masks[i - 4]));\r\n  }\r\n  const originMaskString = masks.map((mask) => mask.join(\"\\n\"));\r\n  const itemMaskStrings = itemMasks[i].map((mask) => mask.join(\"\\n\"));\r\n  return itemMaskStrings.map((itemMaskString) =>\r\n    originMaskString.indexOf(itemMaskString)\r\n  );\r\n});\r\n\r\n// 10 * ?\r\nexport const firstXCols = itemMasks.map((masks) =>\r\n  masks.map((mask) => mask[0].indexOf(\"x\"))\r\n);\r\n\r\nexport function solve(board: string[][], solutionCount: number) {\r\n  //console.log(\"board: \" + board);\r\n  const ret: { index: number; shapeRotation: number }[][] = [];\r\n  const solution: ({ index: number; shapeRotation: number } | null)[] =\r\n    items.map(() => null);\r\n  //let count = 0;\r\n\r\n  const canPlace = (index: number, shape: number, shapeRotation: number) => {\r\n    const row = Math.floor(index / COLS);\r\n    const col = index % COLS;\r\n    const mask = itemMasks[shape][shapeRotation];\r\n    const n = mask.length;\r\n    const m = mask[0].length;\r\n    const firstXCol = firstXCols[shape][shapeRotation];\r\n    if (row + n > ROWS) {\r\n      return false;\r\n    }\r\n    if (col - firstXCol < 0 || col + m - firstXCol > COLS) {\r\n      return false;\r\n    }\r\n    for (let r = 0; r < n; ++r) {\r\n      for (let c = 0; c < m; ++c) {\r\n        if (mask[r][c] === \"x\" && board[row + r][col + c - firstXCol] === \"x\") {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const place = (index: number, shape: number, shapeRotation: number) => {\r\n    const row = Math.floor(index / COLS);\r\n    const col = index % COLS;\r\n    const mask = itemMasks[shape][shapeRotation];\r\n    const n = mask.length;\r\n    const m = mask[0].length;\r\n    const firstXCol = firstXCols[shape][shapeRotation];\r\n    for (let r = 0; r < n; ++r) {\r\n      for (let c = 0; c < m; ++c) {\r\n        if (mask[r][c] === \"x\") {\r\n          board[row + r][col + c - firstXCol] = \"x\";\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const remove = (index: number, shape: number, shapeRotation: number) => {\r\n    const row = Math.floor(index / COLS);\r\n    const col = index % COLS;\r\n    const mask = itemMasks[shape][shapeRotation];\r\n    const n = mask.length;\r\n    const m = mask[0].length;\r\n    const firstXCol = firstXCols[shape][shapeRotation];\r\n    for (let r = 0; r < n; ++r) {\r\n      for (let c = 0; c < m; ++c) {\r\n        if (mask[r][c] === \"x\") {\r\n          board[row + r][col + c - firstXCol] = \".\";\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * finds solutions to calendar puzzle\r\n   * @param  {number} index  position number in calendar matrix\r\n   * @return {any}        array of solutions\r\n   */\r\n  const findSolutions: any = (index: number) => {\r\n    //count += 1;\r\n    if (solutionCount !== 0 && ret.length > solutionCount - 1) {\r\n      return false;\r\n    }\r\n    const row = Math.floor(index / COLS);\r\n    const col = index % COLS;\r\n    if (row >= ROWS) {\r\n      ret.push(solution.map((s) => s!));\r\n      return true;\r\n    }\r\n    if (board[row][col] === \"x\") {\r\n      return findSolutions(index + 1);\r\n    }\r\n    for (let shape = 0; shape < items.length; ++shape) {\r\n      if (!solution[shape]) {\r\n        for (\r\n          let shapeRotation = 0;\r\n          shapeRotation < itemMasks[shape].length;\r\n          ++shapeRotation\r\n        ) {\r\n          if (canPlace(index, shape, shapeRotation)) {\r\n            place(index, shape, shapeRotation);\r\n            solution[shape] = { index, shapeRotation };\r\n            findSolutions(index + 1);\r\n            solution[shape] = null;\r\n            remove(index, shape, shapeRotation);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  findSolutions(0);\r\n  //console.log(`Searches: ${count}`);\r\n  return ret;\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { flatten } from \"lodash\";\nimport {\n  COLS,\n  firstXCols,\n  itemDirections,\n  items,\n  puzzle,\n  solve,\n} from \"./solver\";\nimport { testSolver } from \"./testSolver\";\n\nclass Calendar extends React.PureComponent<{\n  month: number;\n  day: number;\n  dayName: number;\n  onChange: (params: { month: number; day: number; dayName: number }) => any;\n}> {\n  monthNames = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  dayNames = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n\n  render() {\n    //const { month, day, dayName, onChange } = this.props;\n    /* {range(0, 6).map((m) => (\n          <div\n            className={`item month ${month === m ? \"selected\" : \"\"}`}\n            key={m}\n            onClick={() => onChange({ month: m, day, dayName })}\n          >\n            {this.monthNames[m]}\n          </div>\n        ))}\n        <div className=\"item empty\" />\n        {range(6, 12).map((m) => (\n          <div\n            className={`item month ${month === m ? \"selected\" : \"\"}`}\n            key={m}\n            onClick={() => onChange({ month: m, day, dayName })}\n          >\n            {this.monthNames[m]}\n          </div>\n        ))}\n        <div className=\"item empty\" />\n        {range(1, 32).map((d) => (\n          <div\n            className={`item ${day === d ? \"selected\" : \"\"}`}\n            key={d}\n            onClick={() => onChange({ month, day: d, dayName })}\n          >\n            {d}\n          </div>\n        ))}\n        {range(0, 4).map((dn) => (\n          <div\n            className={`item day ${dayName === dn ? \"selected\" : \"\"}`}\n            key={dn}\n            onClick={() => onChange({ month, day, dayName: dn })}\n          >\n            {this.dayNames[dn]}\n          </div>\n        ))}\n        <div className=\"item empty\" />\n        <div className=\"item empty\" />\n        <div className=\"item empty\" />\n        <div className=\"item empty\" />\n        {range(4, 7).map((dn) => (\n          <div\n            className={`item day ${dayName === dn ? \"selected\" : \"\"}`}\n            key={dn}\n            onClick={() => onChange({ month, day, dayName: dn })}\n          >\n            {this.dayNames[dn]}\n          </div>\n        ))}\n        */\n    return (\n      <div className=\"Calendar\">\n        <img src=\"images/calendarBackground.png\" alt=\"Calendar Background\" />\n      </div>\n    );\n  }\n}\n\nclass SolutionView extends React.PureComponent<{\n  solution: { index: number; shapeRotation: number }[];\n}> {\n  colors = [\n    \"#6B7280\",\n    \"#EF4444\",\n    \"#F59E0B\",\n    \"#10B981\",\n    \"#3bd7f6\",\n    \"#6366F1\",\n    \"#c85cf6\",\n    \"#EC4899\",\n    \"#ff266e\",\n    \"#964b2d\",\n  ];\n\n  render() {\n    const { solution } = this.props;\n\n    return (\n      <div className=\"SolutionView\">\n        {items.map((item, i) => {\n          const { index, shapeRotation } = solution[i];\n          const row = Math.floor(index / COLS);\n          const col = index % COLS;\n          const firstXCol = firstXCols[i][shapeRotation];\n          const direction = itemDirections[i][shapeRotation];\n\n          const hwDiff = item.length - item[0].length;\n          const needDiff =\n            direction === 1 ||\n            direction === 3 ||\n            direction === 4 ||\n            direction === 6;\n          return (\n            <div\n              key={i}\n              className=\"SolutionViewItem\"\n              style={{\n                top: row * 50,\n                left: (col - firstXCol) * 50,\n                width: item[0].length * 50,\n                height: item.length * 50,\n                transform: [\n                  `translate3d(${needDiff ? hwDiff * 25 : 0}px, ${\n                    needDiff ? hwDiff * -25 : 0\n                  }px, 0px)`,\n                  `rotate3d(1, 1, 0, ${Math.floor(direction / 4) * 180}deg)`,\n                  `rotate3d(0, 0, 1, -${(direction % 4) * 90}deg)`,\n                ].join(\" \"),\n              }}\n              data-direction={direction}\n            >\n              {flatten(\n                item.map((s, r) =>\n                  s.split(\"\").map((_1, c) => {\n                    if (item[r][c] !== \"x\") {\n                      return (\n                        <div key={`${r}_${c}`} className=\"SolutionViewCell\" />\n                      );\n                    }\n                    let top = 0;\n                    let bottom = 0;\n                    let left = 0;\n                    let right = 0;\n                    const bw = 1; //border width\n                    if (r === 0) {\n                      top = 1;\n                    } else {\n                      if (item[r - 1][c] === \".\") {\n                        top = 1;\n                      }\n                    }\n                    if (r === item.length - 1) {\n                      bottom = 1;\n                    } else {\n                      if (item[r + 1][c] === \".\") {\n                        bottom = 1;\n                      }\n                    }\n                    if (c === 0) {\n                      left = 1;\n                    } else {\n                      if (item[r][c - 1] === \".\") {\n                        left = 1;\n                      }\n                    }\n                    if (c === item[0].length - 1) {\n                      right = 1;\n                    } else {\n                      if (item[r][c + 1] === \".\") {\n                        right = 1;\n                      }\n                    }\n                    return (\n                      <div\n                        key={`${r}_${c}`}\n                        className=\"SolutionViewCell\"\n                        style={{\n                          borderTop: bw * top,\n                          borderLeft: bw * left,\n                          borderRight: bw * right,\n                          borderBottom: bw * bottom,\n                          borderStyle: \"solid\",\n                          borderColor: \"black\",\n                          width: 50 - left * bw - right * bw,\n                          height: 50 - top * bw - bottom * bw,\n                          backgroundColor: this.colors[i],\n                        }}\n                      />\n                    );\n                  })\n                )\n              )}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\ntype AppState = {\n  month: number; // 0 - 11\n  day: number; // 1 - 31\n  dayName: number; // 0 - 6\n  solutions: { index: number; shapeRotation: number }[][];\n  index: number;\n  solutionCount: number;\n};\n\nexport default class App extends React.PureComponent<{}, AppState> {\n  solve = (\n    month: number,\n    day: number,\n    dayName: number,\n    solutionCount: number\n  ) => {\n    const board = puzzle.map((row) => row.split(\"\"));\n    board[Math.floor(month / 6)][month % 6] = \"x\";\n    board[Math.floor((day - 1) / 7) + 2][(day - 1) % 7] = \"x\";\n    if (dayName < 4) {\n      board[6][3 + dayName] = \"x\";\n    }\n    board[7][dayName] = \"x\";\n    return solve(board, solutionCount);\n  };\n\n  state: AppState = {\n    month: new Date().getMonth(), // 0 - 11\n    day: new Date().getDate(), // 1 - 31\n    dayName: new Date().getDay(), // 0 - 6\n    solutions: this.solve(\n      new Date().getMonth(),\n      new Date().getDate(),\n      new Date().getDay(),\n      1\n    ),\n    index: 0,\n    solutionCount: 1,\n  };\n\n  handleChange = ({\n    month,\n    day,\n    dayName,\n  }: {\n    month: number;\n    day: number;\n    dayName: number;\n  }) =>\n    this.setState({\n      month,\n      day,\n      dayName,\n      solutions: this.solve(month, day, dayName, this.state.solutionCount),\n      index: 0,\n    });\n\n  solCountChange = (solutionCount: number) =>\n    this.setState({\n      solutionCount: solutionCount,\n      solutions: this.solve(\n        this.state.month,\n        this.state.day,\n        this.state.dayName,\n        solutionCount\n      ),\n    });\n\n  longMonthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  longDayNames = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  nth = function (d: number): String {\n    if (d > 3 && d < 21) return \"th\";\n    switch (d % 10) {\n      case 1:\n        return \"st\";\n      case 2:\n        return \"nd\";\n      case 3:\n        return \"rd\";\n      default:\n        return \"th\";\n    }\n  };\n\n  render() {\n    if (false) {\n      testSolver();\n    }\n    const { month, day, dayName, solutions, index, solutionCount } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Calendar Puzzle Solver with Day of Week</h1>\n        <div>\n          <a href=\"https://filmmings.com/products/daily-calendar-puzzle\">\n            Daily Calendar Puzzle with Day of Week\n          </a>\n          <a\n            href=\"https://github.com/Restingsound/calendar-puzzle-solver\"\n            style={{ marginLeft: 16 }}\n          >\n            Github - Restingsound\n          </a>\n        </div>\n        <div className=\"Container\">\n          <Calendar\n            month={month}\n            day={day}\n            dayName={dayName}\n            onChange={this.handleChange}\n          />\n          {solutions[index] && <SolutionView solution={solutions[index]} />}\n        </div>\n\n        <div className=\"Solutions\">\n          <div\n            className={`SolutionItem ${solutionCount === 1 ? \"selected\" : \"\"}`}\n            onClick={() => this.solCountChange(1)}\n          >\n            Single Solution\n          </div>\n          <div\n            className={`SolutionItem ${solutionCount === 50 ? \"selected\" : \"\"}`}\n            onClick={() => this.solCountChange(50)}\n          >\n            50 Solutions\n          </div>\n          <div\n            className={`SolutionItem ${solutionCount === 0 ? \"selected\" : \"\"}`}\n            onClick={() => this.solCountChange(0)}\n          >\n            All Solutions (Slow)\n          </div>\n        </div>\n        <div>\n          Puzzle for {this.longDayNames[dayName]}, {this.longMonthNames[month]}{\" \"}\n          {day}\n          {this.nth(day)}\n          <br />\n          {solutionCount === 0 ? (\n            <div>\n              {\" \"}\n              Found all {solutions.length} possible solutions for this puzzle.\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n        {solutions.length > 1 ? (\n          <div className=\"Solutions\">\n            {solutions?.map((solution, i) => (\n              <div\n                className={`SolutionItem ${i === index ? \"selected\" : \"\"}`}\n                key={i}\n                onClick={() => this.setState({ index: i })}\n              >\n                {`Solution ${i + 1}`}\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div></div>\n        )}\n        <div>\n          This page was created by{\" \"}\n          <a href=\"https://github.com/Restingsound\">Scott Mulderig</a>\n        </div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}