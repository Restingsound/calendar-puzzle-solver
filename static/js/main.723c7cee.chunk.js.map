{"version":3,"sources":["solver.ts","App.tsx","reportWebVitals.js","index.js"],"names":["puzzle","ROWS","length","COLS","items","rotate","item","n","m","ret","i","push","j","map","v","join","flip","itemMasks","uniqBy","x","itemDirections","masks","originMaskString","mask","itemMaskString","indexOf","firstXCols","solve","board","solution","count","canPlace","index","shape","shapeRotation","row","Math","floor","col","firstXCol","r","c","place","remove","findSolutions","s","console","log","Calendar","monthNames","dayNames","this","props","month","day","dayName","onChange","className","range","onClick","d","dn","React","PureComponent","SolutionView","colors","direction","hwDiff","needDiff","style","top","left","width","height","transform","flatten","split","_1","border","borderColor","backgroundColor","App","state","Date","getMonth","getDate","getDay","solutions","handleChange","setState","href","marginLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.723c7cee.chunk.js","sourcesContent":["import { uniqBy } from \"lodash\";\n\n// 8 x 7\nexport const puzzle = [\n  \"......x\",\n  \"......x\",\n  \".......\",\n  \".......\",\n  \".......\",\n  \".......\",\n  \".......\",\n  \"xxxx...\",\n];\nexport const ROWS = puzzle.length;\nexport const COLS = puzzle[0].length;\n\n// 10\nexport const items = [\n  [\"x...\", \"xxxx\"],\n  [\"x..\", \"xxx\", \"..x\"],\n  [\"..xx\", \"xxx.\"],\n  [\"xxxx\"],\n  [\".xx\", \"xxx\"],\n  [\"xxx\", \"x.x\"],\n  [\"x..\", \"xxx\"],\n  [\"x..\", \"x..\", \"xxx\"],\n  [\"x..\", \"xxx\", \"x..\"],\n  [\"xx.\", \".xx\"],\n];\n\nconst rotate = (item: string[]) => {\n  const n = item.length;\n  const m = item[0].length;\n  const ret: any[] = [];\n  for (let i = 0; i < m; ++i) {\n    ret.push([]);\n    for (let j = 0; j < n; ++j) {\n      ret[i].push(item[j][m - i - 1]);\n    }\n  }\n  return ret.map((v) => v.join(\"\"));\n};\n\nconst flip = (item: string[]) => {\n  const n = item.length;\n  const m = item[0].length;\n  const ret: any[] = [];\n  for (let i = 0; i < m; ++i) {\n    ret.push([]);\n    for (let j = 0; j < n; ++j) {\n      ret[i].push(item[j][i]);\n    }\n  }\n  return ret.map((v) => v.join(\"\"));\n};\n\n// 10 * ? * ['???','???']\nexport const itemMasks = items.map((item) => {\n  const ret = [item];\n  // rotate\n  for (let i = 1; i < 4; ++i) {\n    ret.push(rotate(ret[i - 1]));\n  }\n  for (let i = 4; i < 8; ++i) {\n    ret.push(flip(ret[i - 4]));\n  }\n  return uniqBy(ret, (x) => x.join(\"\\n\"));\n});\n\n// 10 * ?\nexport const itemDirections = items.map((item, i) => {\n  const masks = [item];\n  // rotate\n  for (let i = 1; i < 4; ++i) {\n    masks.push(rotate(masks[i - 1]));\n  }\n  for (let i = 4; i < 8; ++i) {\n    masks.push(flip(masks[i - 4]));\n  }\n  const originMaskString = masks.map((mask) => mask.join(\"\\n\"));\n  const itemMaskStrings = itemMasks[i].map((mask) => mask.join(\"\\n\"));\n  return itemMaskStrings.map((itemMaskString) =>\n    originMaskString.indexOf(itemMaskString)\n  );\n});\n\n// 10 * ?\nexport const firstXCols = itemMasks.map((masks) =>\n  masks.map((mask) => mask[0].indexOf(\"x\"))\n);\n\nexport function solve(board: string[][]) {\n  //console.log(\"board: \" + board);\n  const ret: { index: number; shapeRotation: number }[][] = [];\n  const solution: ({ index: number; shapeRotation: number } | null)[] =\n    items.map(() => null);\n  let count = 0;\n\n  const canPlace = (index: number, shape: number, shapeRotation: number) => {\n    const row = Math.floor(index / COLS);\n    const col = index % COLS;\n    const mask = itemMasks[shape][shapeRotation];\n    const n = mask.length;\n    const m = mask[0].length;\n    const firstXCol = firstXCols[shape][shapeRotation];\n    if (row + n > ROWS) {\n      return false;\n    }\n    if (col - firstXCol < 0 || col + m - firstXCol > COLS) {\n      return false;\n    }\n    for (let r = 0; r < n; ++r) {\n      for (let c = 0; c < m; ++c) {\n        if (mask[r][c] === \"x\" && board[row + r][col + c - firstXCol] === \"x\") {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  const place = (index: number, shape: number, shapeRotation: number) => {\n    const row = Math.floor(index / COLS);\n    const col = index % COLS;\n    const mask = itemMasks[shape][shapeRotation];\n    const n = mask.length;\n    const m = mask[0].length;\n    const firstXCol = firstXCols[shape][shapeRotation];\n    for (let r = 0; r < n; ++r) {\n      for (let c = 0; c < m; ++c) {\n        if (mask[r][c] === \"x\") {\n          board[row + r][col + c - firstXCol] = \"x\";\n        }\n      }\n    }\n  };\n\n  const remove = (index: number, shape: number, shapeRotation: number) => {\n    const row = Math.floor(index / COLS);\n    const col = index % COLS;\n    const mask = itemMasks[shape][shapeRotation];\n    const n = mask.length;\n    const m = mask[0].length;\n    const firstXCol = firstXCols[shape][shapeRotation];\n    for (let r = 0; r < n; ++r) {\n      for (let c = 0; c < m; ++c) {\n        if (mask[r][c] === \"x\") {\n          board[row + r][col + c - firstXCol] = \".\";\n        }\n      }\n    }\n  };\n\n  const findSolutions: any = (index: number) => {\n    count += 1;\n    if (ret.length > 49) {\n      return false;\n    }\n    const row = Math.floor(index / COLS);\n    const col = index % COLS;\n    if (row >= ROWS) {\n      //console.log(\"solution \" + count + \" is \");\n      //console.log(solution);\n      //why is this map different!? ********************************************\n      //console.log(solution.map((s) => s));\n      ret.push(solution.map((s) => s!));\n      return true;\n    }\n    if (board[row][col] === \"x\") {\n      return findSolutions(index + 1);\n    }\n    for (let shape = 0; shape < items.length; ++shape) {\n      if (!solution[shape]) {\n        for (\n          let shapeRotation = 0;\n          shapeRotation < itemMasks[shape].length;\n          ++shapeRotation\n        ) {\n          if (canPlace(index, shape, shapeRotation)) {\n            place(index, shape, shapeRotation);\n            solution[shape] = { index, shapeRotation };\n            findSolutions(index + 1);\n            solution[shape] = null;\n            remove(index, shape, shapeRotation);\n          }\n        }\n      }\n    }\n    return false;\n  };\n\n  findSolutions(0);\n  console.log(`Searches: ${count}`);\n  return ret;\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { flatten, range } from \"lodash\";\nimport {\n  COLS,\n  firstXCols,\n  itemDirections,\n  items,\n  puzzle,\n  solve,\n} from \"./solver\";\n\nclass Calendar extends React.PureComponent<{\n  month: number;\n  day: number;\n  dayName: number;\n  onChange: (params: { month: number; day: number; dayName: number }) => any;\n}> {\n  monthNames = [\n    \"JAN\",\n    \"FEB\",\n    \"MAR\",\n    \"APR\",\n    \"MAY\",\n    \"JUN\",\n    \"JUL\",\n    \"AUG\",\n    \"SEP\",\n    \"OCT\",\n    \"NOV\",\n    \"DEC\",\n  ];\n\n  dayNames = [\"SUN\", \"MON\", \"TUES\", \"WED\", \"THUR\", \"FRI\", \"SAT\"];\n\n  render() {\n    const { month, day, dayName, onChange } = this.props;\n    return (\n      <div className=\"Calendar\">\n        {range(0, 6).map((m) => (\n          <div\n            className={`item month ${month === m ? \"selected\" : \"\"}`}\n            key={m}\n            onClick={() => onChange({ month: m, day, dayName })}\n          >\n            {this.monthNames[m]}\n          </div>\n        ))}\n        <div className=\"item empty\" />\n        {range(6, 12).map((m) => (\n          <div\n            className={`item month ${month === m ? \"selected\" : \"\"}`}\n            key={m}\n            onClick={() => onChange({ month: m, day, dayName })}\n          >\n            {this.monthNames[m]}\n          </div>\n        ))}\n        <div className=\"item empty\" />\n        {range(1, 32).map((d) => (\n          <div\n            className={`item ${day === d ? \"selected\" : \"\"}`}\n            key={d}\n            onClick={() => onChange({ month, day: d, dayName })}\n          >\n            {d}\n          </div>\n        ))}\n        {range(0, 4).map((dn) => (\n          <div\n            className={`item day ${dayName === dn ? \"selected\" : \"\"}`}\n            key={dn}\n            onClick={() => onChange({ month, day, dayName: dn })}\n          >\n            {this.dayNames[dn]}\n          </div>\n        ))}\n        <div className=\"item empty\" />\n        <div className=\"item empty\" />\n        <div className=\"item empty\" />\n        <div className=\"item empty\" />\n        {range(4, 7).map((dn) => (\n          <div\n            className={`item day ${dayName === dn ? \"selected\" : \"\"}`}\n            key={dn}\n            onClick={() => onChange({ month, day, dayName: dn })}\n          >\n            {this.dayNames[dn]}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nclass SolutionView extends React.PureComponent<{\n  solution: { index: number; shapeRotation: number }[];\n}> {\n  colors = [\n    \"#6B7280\",\n    \"#EF4444\",\n    \"#F59E0B\",\n    \"#10B981\",\n    \"#3bd7f6\",\n    \"#6366F1\",\n    \"#c85cf6\",\n    \"#EC4899\",\n    \"#ff266e\",\n    \"#964b2d\",\n  ];\n\n  render() {\n    const { solution } = this.props;\n\n    return (\n      <div className=\"SolutionView\">\n        {items.map((item, i) => {\n          const { index, shapeRotation } = solution[i];\n          const row = Math.floor(index / COLS);\n          const col = index % COLS;\n          const firstXCol = firstXCols[i][shapeRotation];\n          const direction = itemDirections[i][shapeRotation];\n\n          const hwDiff = item.length - item[0].length;\n          const needDiff =\n            direction === 1 ||\n            direction === 3 ||\n            direction === 4 ||\n            direction === 6;\n          return (\n            <div\n              key={i}\n              className=\"SolutionViewItem\"\n              style={{\n                top: row * 50,\n                left: (col - firstXCol) * 50,\n                width: item[0].length * 50,\n                height: item.length * 50,\n                transform: [\n                  `translate3d(${needDiff ? hwDiff * 25 : 0}px, ${\n                    needDiff ? hwDiff * -25 : 0\n                  }px, 0px)`,\n                  `rotate3d(1, 1, 0, ${Math.floor(direction / 4) * 180}deg)`,\n                  `rotate3d(0, 0, 1, -${(direction % 4) * 90}deg)`,\n                ].join(\" \"),\n              }}\n              data-direction={direction}\n            >\n              {flatten(\n                item.map((s, r) =>\n                  s.split(\"\").map((_1, c) => (\n                    <div\n                      key={`${r}_${c}`}\n                      className=\"SolutionViewCell\"\n                      style={\n                        item[r][c] === \"x\"\n                          ? {\n                              border: \"2px ridge\",\n                              borderColor: this.colors[i],\n                              width: 46,\n                              height: 46,\n                              backgroundColor: this.colors[i],\n                            }\n                          : {}\n                      }\n                    />\n                  ))\n                )\n              )}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\ntype AppState = {\n  month: number; // 0 - 11\n  day: number; // 1 - 31\n  dayName: number; // 0 - 6\n  solutions: { index: number; shapeRotation: number }[][];\n  index: number;\n};\n\nexport default class App extends React.PureComponent<{}, AppState> {\n  solve = (month: number, day: number, dayName: number) => {\n    const board = puzzle.map((row) => row.split(\"\"));\n    board[Math.floor(month / 6)][month % 6] = \"x\";\n    board[Math.floor((day - 1) / 7) + 2][(day - 1) % 7] = \"x\";\n    if (dayName < 4) {\n      board[6][3 + dayName] = \"x\";\n    }\n    board[7][dayName] = \"x\";\n    return solve(board);\n  };\n\n  state: AppState = {\n    month: new Date().getMonth(), // 0 - 11\n    day: new Date().getDate(), // 1 - 31\n    dayName: new Date().getDay(), // 0 - 6\n    solutions: this.solve(\n      new Date().getMonth(),\n      new Date().getDate(),\n      new Date().getDay()\n    ),\n    index: 0,\n  };\n\n  handleChange = ({\n    month,\n    day,\n    dayName,\n  }: {\n    month: number;\n    day: number;\n    dayName: number;\n  }) =>\n    this.setState({\n      month,\n      day,\n      dayName,\n      solutions: this.solve(month, day, dayName),\n      index: 0,\n    });\n\n  render() {\n    const { month, day, dayName, solutions, index } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Calendar Puzzle Solver with Day of Week</h1>\n        <div>\n          <a href=\"https://filmmings.com/products/daily-calendar-puzzle\">\n            Daily Calendar Puzzle with Day of Week\n          </a>\n          <a\n            href=\"https://github.com/Restingsound/calendar-puzzle-solver\"\n            style={{ marginLeft: 16 }}\n          >\n            Github - Restingsound\n          </a>\n        </div>\n        <div className=\"Container\">\n          <Calendar\n            month={month}\n            day={day}\n            dayName={dayName}\n            onChange={this.handleChange}\n          />\n          {solutions[index] && <SolutionView solution={solutions[index]} />}\n        </div>\n        {solutions.length > 0 ? (\n          <div className=\"Solutions\">\n            {solutions?.map((solution, i) => (\n              <div\n                className={`SolutionItem ${i === index ? \"selected\" : \"\"}`}\n                key={i}\n                onClick={() => this.setState({ index: i })}\n              >\n                {`Solution ${i + 1}`}\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div>No Solution ？？</div>\n        )}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}